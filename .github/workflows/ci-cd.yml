name: CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'docker-compose.prod.yml'
      - '.github/workflows/**'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_FE: ghcr.io/${{ github.repository_owner }}/vynlotaste-frontend
      IMAGE_BE: ghcr.io/${{ github.repository_owner }}/vynlotaste-backend
      TAG: ${{ github.sha }}
    outputs:
      backend_changed: ${{ steps.changes.outputs.backend_any_changed }}
      frontend_changed: ${{ steps.changes.outputs.frontend_any_changed }}
      infra_changed: ${{ steps.changes.outputs.infra_any_changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes
        id: changes
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            infra:
              - 'docker-compose.prod.yml'
              - '.github/workflows/**'

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        if: ${{ steps.changes.outputs.backend_any_changed == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BE }}:${{ env.TAG }}
            ${{ env.IMAGE_BE }}:latest

      - name: Build and push frontend image
        if: ${{ steps.changes.outputs.frontend_any_changed == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_FE }}:${{ env.TAG }}
            ${{ env.IMAGE_FE }}:latest
          build-args: |
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.backend_changed == 'true' || needs.build.outputs.frontend_changed == 'true' || needs.build.outputs.infra_changed == 'true' }}
    env:
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd /opt/vynlo
            # Se sua imagem for pública NO GHCR, você pode pular o login.
            # Para imagens privadas no GHCR, crie secrets GHCR_USER/GHCR_TOKEN com read:packages.
            if [ -n "${{ secrets.GHCR_USER }}" ] && [ -n "${{ secrets.GHCR_TOKEN }}" ]; then
              echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin
            fi

            # Opcional: exportar COMMIT_SHA para o compose
            export COMMIT_SHA=${COMMIT_SHA}

            # Puxar e subir
            docker compose -f docker-compose.prod.yml pull || true
            docker compose -f docker-compose.prod.yml up -d
            docker system prune -f
