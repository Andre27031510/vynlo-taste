services:
  postgres:
    image: postgres:15-alpine
    container_name: vynlo-postgres
    environment:
      POSTGRES_DB: vynlotaste
      POSTGRES_USER: vynlo_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-vynlo_pass_2024}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [vynlo-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vynlo_user -d vynlotaste"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: vynlo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks: [vynlo-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ghcr.io/andre27031510/vynlotaste-backend:latest
    container_name: vynlo-backend
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /app/firebase-service-account.json
      FIREBASE_CONFIG: /app/firebase-service-account.json
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/vynlotaste
      DB_USER: vynlo_user
      DB_PASSWORD: ${DB_PASSWORD:-vynlo_pass_2024}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-default_jwt_secret_change_in_production}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
    volumes:
      - /opt/secrets/firebase-service-account.json:/app/firebase-service-account.json:ro
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [vynlo-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ghcr.io/andre27031510/vynlotaste-frontend:latest
    container_name: vynlo-frontend-prod
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks: [vynlo-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: vynlo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks: [vynlo-network]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: vynlo-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks: [vynlo-network]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  vynlo-network: